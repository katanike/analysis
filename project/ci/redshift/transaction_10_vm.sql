DROP TABLE if EXISTS transaction_10_vm ;

CREATE TABLE transaction_10_vm( 
    group_company_code  VARCHAR (10),
    wireless_sales_slip_no VARCHAR(20),
    column_no        VARCHAR(20),
    product_code     VARCHAR(20),
    full_tank_number VARCHAR(20),
    selling_price    VARCHAR(20),
    meter_no         VARCHAR(20),
    hot_cold_classification  VARCHAR (5),
    last_visit_inventory VARCHAR (5),
    sales_quantity   VARCHAR (5),
    sales_after_supply VARCHAR (5),
    product_code_before_replacement VARCHAR (10),
    full_tank_quantity_before_product_replacement VARCHAR (10),
    number_of_products_introduced_before_product_replacement VARCHAR (10),
    price_before_replacement  VARCHAR (10),
    meter_no_before_product_replacement  VARCHAR (10),
    hot_cold_classification_before_product_replacement VARCHAR (10),
    site_code        VARCHAR(20),
    department_code  VARCHAR(20),
    route_code       VARCHAR(20), 
    customer_number  VARCHAR(20),
    branch_number    VARCHAR(20),
    equipment_code   VARCHAR(20),
    sales_date VARCHAR(20), 
    last_visit_date VARCHAR(20), 
    last_calibration_date VARCHAR (20), 
    number_of_sales_update_failure  VARCHAR(20), 
    buying_place_code  VARCHAR (5),
    sales_system_representative_code  VARCHAR(20),
    sales_method_detail_code  VARCHAR(20),
    in_out_classification     VARCHAR(20),
    annual_contribution_sales_capacity_conversion VARCHAR(20), 
    open_closed_classification VARCHAR (30),
    contents_manufacturer_code VARCHAR (30),
    installation_date         VARCHAR (30),
    number_of_adjacent_vm_cc  VARCHAR(20), 
    number_of_adjacent_vm_k   VARCHAR(20), 
    number_of_adjacent_vm_a   VARCHAR(20), 
    number_of_adjacent_vm_dy  VARCHAR(20), 
    number_of_adjacent_vm_it  VARCHAR(20), 
    number_of_adjacent_vm_po  VARCHAR(20), 
    number_of_adjacent_vm_ot  VARCHAR(20), 
    number_of_adjacent_vm_sf  VARCHAR(20),
    other_num VARCHAR(20),
    dt VARCHAR(20)
    );